% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_apply.R
\name{sim_apply}
\alias{sim_apply}
\title{Apply a function to simulated parameter values}
\usage{
sim_apply(sim, FUN, verbose = TRUE, cl = NULL, ...)
}
\arguments{
\item{sim}{a \code{simbased_sim} object; the output of a call to \code{\link[=sim]{sim()}}.}

\item{FUN}{a function to be applied to each set of simulated coefficients. See Details.}

\item{verbose}{\code{logical}; whether to display a text progress bar indicating progress and estimated time remaining for the procedure. Default is \code{TRUE}.}

\item{cl}{a cluster object created by \code{\link[parallel:makeCluster]{parallel::makeCluster()}}, or an integer to indicate number of child-processes (integer values are ignored on Windows) for parallel evaluations. See \code{\link[pbapply:pbapply]{pbapply::pblapply()}} for details. If \code{NULL}, no parallelization will take place.}

\item{...}{optional arguments passed to \code{FUN}.}
}
\value{
A \code{simbased_est} object, which is a matrix with a column for each estimated quantity and a row for each simulation. The original estimates (\code{FUN} applied to the original coefficients or model fit object) are stored in the attribute \code{"original"}. The \code{"sim_hash"} attributes contained the simulation hash produced by \code{sim()}.
}
\description{
\code{sim_apply()} applies a function that produces quantities of interest to each set of simulated coefficients produced by \code{\link[=sim]{sim()}}; these calculated quantities form the posterior sampling distribution for the quantities of interest. Capabilities are available for parallelization.
}
\details{
\code{sim_apply()} applies a function to each set of simulated coefficients, similar to \code{\link[=apply]{apply()}}. This function should produce an estimated quantity for which inference is to take place.

\code{FUN} should return a numeric vector containing one or more estimated quantities. This should be a named vector to more easily keep track of the meaning of each estimated quantity. Care should be taken to ensure that the returned vector is the same length each time \code{FUN} is called. \code{NA}s are allowed in the output but should be avoided if possible.

The arguments to \code{FUN} can be specified in a few ways. If \code{FUN} has an argument called \code{coefs}, a simulated set of coefficients will be passed to this argument, and \code{FUN} should compute and return a quantity based on the coefficients (e.g., the difference between two coefficients if one wants to test whether two coefficients are equal). If \code{FUN} has an argument called \code{fit}, a model fit object of the same type as the one originally supplied to \code{sim()} (e.g., an \code{lm} or \code{glm} object) will be passed to this argument, where the coefficients of the fit object have been replaced by the simulated coefficients generated by \code{sim()}, and \code{FUN} should compute and return a quantity based on the model fit (e.g., a computation based on the output of \code{predict()}). If neither \code{coefs} nor \code{fit} are the names of arguments to \code{FUN}, the model fit object with replaced coefficients will be supplied to the first argument of \code{FUN}.

When custom coefficients are supplied to \code{sim()}, i.e., when the \code{coefs} argument to \code{sim()} is not left at its default value, \code{FUN} must accept a \code{coefs} argument and a warning will be thrown if it accepts a \code{fit} argument. This is because \code{sim_apply()} does not know how to reconstruct the original fit object with the new coefficients inserted. The quantities computed by \code{sim_apply()} must therefore be computed directly from the coefficients.
}
\seealso{
\itemize{
\item \code{\link[=sim]{sim()}} for generating the simulated coefficients
\item \code{\link[=cbind.simbased_est]{cbind.simbased_est()}} and \code{\link[=transform.simbased_est]{transform.simbased_est()}} for combining and transforming \code{simbased_est} objects
\item \code{\link[=summary.simbased_est]{summary.simbased_est()}} for computing p-values and confidence intervals for the estimated quantities
\item \code{\link[=sim_plot]{sim_plot()}} for plotting estimated quantities and their simulated posterior sampling distribution.
}
}
